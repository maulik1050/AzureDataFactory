{
	"name": "L9_DataFlow_Example1",
	"properties": {
		"description": "This is the first ever DataFlow I created, to understand the dataflow. ",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText6",
						"type": "DatasetReference"
					},
					"name": "ProductFile"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "AzureDataLakeStorage_V1",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "RemoveOldProductIDs"
				},
				{
					"name": "FlagColor"
				},
				{
					"name": "select1"
				},
				{
					"name": "aggregate1"
				},
				{
					"name": "sort1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ProductID as integer,",
				"          Name as string,",
				"          ProductNumber as string,",
				"          Color as string,",
				"          StandardCost as double,",
				"          ListPrice as double,",
				"          Size as string,",
				"          Weight as string,",
				"          ProductCategoryID as string,",
				"          ProductModelID as string,",
				"          SellStartDate as string,",
				"          SellEndDate as string,",
				"          DiscontinuedDate as string,",
				"          ThumbNailPhoto as string,",
				"          ThumbnailPhotoFileName as string,",
				"          rowguid as string,",
				"          ModifiedDate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> ProductFile",
				"ProductFile filter(ProductID>700) ~> RemoveOldProductIDs",
				"RemoveOldProductIDs derive(BlackColorFlag = equalsIgnoreCase(Color, 'black')) ~> FlagColor",
				"FlagColor select(mapColumn(",
				"          ProdID = ProductID,",
				"          ProdName = Name,",
				"          ProdNumber = ProductNumber,",
				"          Color,",
				"          StandardCost,",
				"          ListPrice,",
				"          Size,",
				"          Weight,",
				"          ProductCategoryID,",
				"          ProductModelID,",
				"          BlackColorFlag",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 aggregate(groupBy(Color),",
				"     HighestPrice = max(ListPrice),",
				"          LowestStandatdCost = min(StandardCost)) ~> aggregate1",
				"aggregate1 sort(asc(HighestPrice, true)) ~> sort1",
				"sort1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'json',",
				"     fileSystem: 'landing',",
				"     folderPath: 'Product',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}